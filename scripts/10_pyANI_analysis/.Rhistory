library('ggplot2')
library(ggplot2)
library(dplyr)
library(tidyr)
library(ggpubr)
library(ggplot2)
library('ggExtra')
#Generate Fig 12. Genome coverage pyANI plots
data <- read.csv("../../data/pyani_analysis/pyani_coevarge_identity_df.csv")
data2 <- data[!data$unique_taxa_names %in% c('6', '5','4', '3'), ]
data3 <- data[!data$unique_taxa_names %in% c('1', '2'), ]
pdf(file='Fig_12.pdf', width=30, height=15)
p1<-ggplot(data2, aes(x=cluster_id, y=coverage, col=comparision_type_species)) +geom_jitter(alpha=0.2)  + facet_wrap(unique_taxa_names ~., scales = 'free_x', nrow=7, shrink=TRUE, dir='h') + scale_y_continuous(name="Genome Coverage (%)") +
scale_x_continuous(breaks = seq(0, 160, 10), name ="") + theme(legend.position="none")
p2<-ggplot(data3, aes(x=cluster_id, y=coverage, col=comparision_type_species)) +geom_jitter(alpha=0.2) +
geom_rect(data = subset(data3,unique_taxa_names == '6'), fill = NA, colour = "red", xmin = 1.5,xmax = 2.5,
ymin = 0.3,ymax = 1,alpha = 0.1) +
facet_wrap(unique_taxa_names ~., scales = 'free_x', nrow=1, shrink=TRUE, dir='h') + scale_y_continuous(name="") +
scale_x_continuous(breaks = seq(0, 20, 2), name ="Cluster ID") + theme(legend.position="none")
p4<-ggarrange(p1, p2,
ncol = 1, nrow = 2, heights = c(2, 1, 1)) + geom_rect(aes(xmin = -132, xmax = -69, ymin = 23, ymax = 49), color = "red", fill = NA)
plot(p4)
dev.off()
library('ggplot2')
library(ggplot2)
library(dplyr)
library(tidyr)
library(ggpubr)
library(ggplot2)
library('ggExtra')
#Generate Fig 12. Genome coverage pyANI plots
data <- read.csv("../../data/pyani_analysis/pyani_coevarge_identity_df.csv")
data2 <- data[!data$unique_taxa_names %in% c('6', '5','4', '15', '14'), ]
data3 <- data[!data$unique_taxa_names %in% c('1', '2', '3'), ]
pdf(file='Fig_12.pdf', width=30, height=15)
p1<-ggplot(data2, aes(x=cluster_id, y=coverage, col=comparision_type_species)) +geom_jitter(alpha=0.2)  + facet_wrap(unique_taxa_names ~., scales = 'free_x', nrow=7, shrink=TRUE, dir='h') + scale_y_continuous(name="Genome Coverage (%)") +
scale_x_continuous(breaks = seq(0, 160, 10), name ="") + theme(legend.position="none")
p2<-ggplot(data3, aes(x=cluster_id, y=coverage, col=comparision_type_species)) +geom_jitter(alpha=0.2) +
geom_rect(data = subset(data3,unique_taxa_names == '6'), fill = NA, colour = "red", xmin = 1.5,xmax = 2.5,
ymin = 0.3,ymax = 1,alpha = 0.1) +
facet_wrap(unique_taxa_names ~., scales = 'free_x', nrow=1, shrink=TRUE, dir='h') + scale_y_continuous(name="") +
scale_x_continuous(breaks = seq(0, 20, 2), name ="Cluster ID") + theme(legend.position="none")
p4<-ggarrange(p1, p2,
ncol = 1, nrow = 2, heights = c(2, 1, 1)) + geom_rect(aes(xmin = -132, xmax = -69, ymin = 23, ymax = 49), color = "red", fill = NA)
plot(p4)
dev.off()
library('ggplot2')
library(ggplot2)
library(dplyr)
library(tidyr)
library(ggpubr)
library(ggplot2)
library('ggExtra')
#Generate Fig 12. Genome coverage pyANI plots
data <- read.csv("../../data/pyani_analysis/pyani_coevarge_identity_df.csv")
data2 <- data[!data$unique_taxa_names %in% c('6', '5','4', '15', '14'), ]
data3 <- data[!data$unique_taxa_names %in% c('1', '2', '3'), ]
pdf(file='Fig_12.pdf', width=30, height=15)
p1<-ggplot(data2, aes(x=cluster_id, y=coverage, col=comparision_type_species)) +geom_jitter(alpha=0.2)  + facet_wrap(unique_taxa_names ~., scales = 'free_x', nrow=7, shrink=TRUE, dir='h') + scale_y_continuous(name="Genome Coverage (%)") +
scale_x_continuous(breaks = seq(0, 160, 10), name ="") + theme(legend.position="none")
p2<-ggplot(data3, aes(x=cluster_id, y=coverage, col=comparision_type_species)) +geom_jitter(alpha=0.2) +
geom_rect(data = subset(data3,unique_taxa_names == '6'), fill = NA, colour = "red", xmin = 1.5,xmax = 2.5,
ymin = 0.3,ymax = 1,alpha = 0.1) +
facet_wrap(unique_taxa_names ~., scales = 'free_x', nrow=1, shrink=TRUE, dir='h') + scale_y_continuous(name="") +
scale_x_continuous(breaks = seq(0, 20, 2), name ="Cluster ID") + theme(legend.position="none")
plot(p4)
dev.off()
library('ggplot2')
library(ggplot2)
library(dplyr)
library(tidyr)
library(ggpubr)
library(ggplot2)
library('ggExtra')
#Generate Fig 12. Genome coverage pyANI plots
data <- read.csv("../../data/pyani_analysis/pyani_coevarge_identity_df.csv")
data2 <- data[!data$unique_taxa_names %in% c('6', '5','4', '15', '14'), ]
data3 <- data[!data$unique_taxa_names %in% c('1', '2', '3'), ]
pdf(file='Fig_12.pdf', width=30, height=15)
p1<-ggplot(data2, aes(x=cluster_id, y=coverage, col=comparision_type_species)) +geom_jitter(alpha=0.2)  + facet_wrap(unique_taxa_names ~., scales = 'free_x', nrow=7, shrink=TRUE, dir='h') + scale_y_continuous(name="Genome Coverage (%)") +
scale_x_continuous(breaks = seq(0, 160, 10), name ="") + theme(legend.position="none")
p2<-ggplot(data3, aes(x=cluster_id, y=coverage, col=comparision_type_species)) +geom_jitter(alpha=0.2) +
geom_rect(data = subset(data3,unique_taxa_names == '6'), fill = NA, colour = "red", xmin = 1.5,xmax = 2.5,
ymin = 0.3,ymax = 1,alpha = 0.1) +
facet_wrap(unique_taxa_names ~., scales = 'free_x', nrow=1, shrink=TRUE, dir='h') + scale_y_continuous(name="") +
scale_x_continuous(breaks = seq(0, 20, 2), name ="Cluster ID") + theme(legend.position="none")
p4<-ggarrange(p1, p2,
ncol = 1, nrow = 2, heights = c(2, 1, 1))
plot(p4)
dev.off()
library('ggplot2')
library(ggplot2)
library(dplyr)
library(tidyr)
library(ggpubr)
library(ggplot2)
library('ggExtra')
#Generate Fig 12. Genome coverage pyANI plots
data <- read.csv("../../data/pyani_analysis/pyani_coevarge_identity_df.csv")
data2 <- data[!data$unique_taxa_names %in% c('6', '5','4', '15', '14'), ]
data3 <- data[!data$unique_taxa_names %in% c('1', '2', '3'), ]
pdf(file='Fig_12.pdf', width=30, height=15)
p1<-ggplot(data2, aes(x=cluster_id, y=coverage, col=comparision_type_species)) +geom_jitter(alpha=0.2)  + facet_wrap(unique_taxa_names ~., scales = 'free_x', nrow=7, shrink=TRUE, dir='h') + scale_y_continuous(name="Genome Coverage (%)") +
scale_x_continuous(breaks = seq(0, 160, 10), name ="") + theme(legend.position="none")
p2<-ggplot(data3, aes(x=cluster_id, y=coverage, col=comparision_type_species)) +geom_jitter(alpha=0.2) +
facet_wrap(unique_taxa_names ~., scales = 'free_x', nrow=1, shrink=TRUE, dir='h') + scale_y_continuous(name="") +
scale_x_continuous(breaks = seq(0, 20, 2), name ="Cluster ID") + theme(legend.position="none")
p4<-ggarrange(p1, p2,
ncol = 1, nrow = 2, heights = c(2, 1, 1))
plot(p4)
dev.off()
library('ggplot2')
library(ggplot2)
library(dplyr)
library(tidyr)
library(ggpubr)
library(ggplot2)
library('ggExtra')
#Generate Fig 12. Genome coverage pyANI plots
data <- read.csv("../../data/pyani_analysis/pyani_coevarge_identity_df.csv")
data2 <- data[!data$unique_taxa_names %in% c('6', '5','4', '15', '14', '8'), ]
data3 <- data[!data$unique_taxa_names %in% c('1', '2', '3'), ]
pdf(file='Fig_12.pdf', width=30, height=15)
p1<-ggplot(data2, aes(x=cluster_id, y=coverage, col=comparision_type_species)) +geom_jitter(alpha=0.2)  + facet_wrap(unique_taxa_names ~., scales = 'free_x', nrow=7, shrink=TRUE, dir='h') + scale_y_continuous(name="Genome Coverage (%)") +
scale_x_continuous(breaks = seq(0, 160, 10), name ="") + theme(legend.position="none")
p2<-ggplot(data3, aes(x=cluster_id, y=coverage, col=comparision_type_species)) +geom_jitter(alpha=0.2) +
facet_wrap(unique_taxa_names ~., scales = 'free_x', nrow=1, shrink=TRUE, dir='h') + scale_y_continuous(name="") +
scale_x_continuous(breaks = seq(0, 20, 2), name ="Cluster ID") + theme(legend.position="none")
p4<-ggarrange(p1, p2,
ncol = 1, nrow = 2, heights = c(2, 1, 1))
plot(p4)
dev.off()
library('ggplot2')
library(ggplot2)
library(dplyr)
library(tidyr)
library(ggpubr)
library(ggplot2)
library('ggExtra')
#Generate Fig 12. Genome coverage pyANI plots
data <- read.csv("../../data/pyani_analysis/pyani_coevarge_identity_df.csv")
data2 <- data[!data$unique_taxa_names %in% c('6', '5','4', '15', '14', '8'), ]
data3 <- data[!data$unique_taxa_names %in% c('1', '2', '3'), ]
pdf(file='Fig_12.pdf', width=30, height=15)
p1<-ggplot(data2, aes(x=cluster_id, y=coverage, col=comparision_type_species)) +geom_jitter(alpha=0.2)  + facet_wrap(unique_taxa_names ~., scales = 'free_x', nrow=2, shrink=TRUE, dir='h') + scale_y_continuous(name="Genome Coverage (%)") +
scale_x_continuous(breaks = seq(0, 160, 10), name ="") + theme(legend.position="none")
p2<-ggplot(data3, aes(x=cluster_id, y=coverage, col=comparision_type_species)) +geom_jitter(alpha=0.2) +
facet_wrap(unique_taxa_names ~., scales = 'free_x', nrow=1, shrink=TRUE, dir='h') + scale_y_continuous(name="") +
scale_x_continuous(breaks = seq(0, 20, 2), name ="Cluster ID") + theme(legend.position="none")
p4<-ggarrange(p1, p2,
ncol = 1, nrow = 2, heights = c(2, 1, 1))
plot(p4)
dev.off()
library('ggplot2')
library(ggplot2)
library(dplyr)
library(tidyr)
library(ggpubr)
library(ggplot2)
library('ggExtra')
#Generate Fig 12. Genome coverage pyANI plots
data <- read.csv("../../data/pyani_analysis/pyani_coevarge_identity_df.csv")
data2 <- data[!data$unique_taxa_names %in% c('6', '5','4', '15', '14', '8'), ]
data3 <- data[!data$unique_taxa_names %in% c('1', '2', '3'), ]
pdf(file='Fig_12.pdf', width=30, height=15)
p1<-ggplot(data2, aes(x=cluster_id, y=coverage, col=comparision_type_species)) +geom_jitter(alpha=0.2)  + facet_wrap(unique_taxa_names ~., scales = 'free_x', nrow=2, shrink=TRUE, dir='h') + scale_y_continuous(name="Genome Coverage (%)") +
scale_x_continuous(breaks = seq(0, 160, 10), name ="") + theme(legend.position="none")
p2<-ggplot(data3, aes(x=cluster_id, y=coverage, col=comparision_type_species)) +geom_jitter(alpha=0.2) +
facet_wrap(unique_taxa_names ~., scales = 'free_x', nrow=1, shrink=TRUE, dir='h') + scale_y_continuous(name="") +
scale_x_continuous(breaks = seq(0, 7, 1), name ="Cluster ID") + theme(legend.position="none")
p4<-ggarrange(p1, p2,
ncol = 1, nrow = 2, heights = c(2, 1, 1))
plot(p4)
dev.off()
library('ggplot2')
library(ggplot2)
library(dplyr)
library(tidyr)
library(ggpubr)
library(ggplot2)
library('ggExtra')
#Generate Fig 12. Genome coverage pyANI plots
data <- read.csv("../../data/pyani_analysis/pyani_coevarge_identity_df.csv")
data2 <- data[!data$unique_taxa_names %in% c('6', '5','4', '15', '14', '8','7'), ]
data3 <- data[!data$unique_taxa_names %in% c('1', '2', '3'), ]
pdf(file='Fig_12.pdf', width=30, height=15)
p1<-ggplot(data2, aes(x=cluster_id, y=coverage, col=comparision_type_species)) +geom_jitter(alpha=0.2)  + facet_wrap(unique_taxa_names ~., scales = 'free_x', nrow=2, shrink=TRUE, dir='h') + scale_y_continuous(name="Genome Coverage (%)") +
scale_x_continuous(breaks = seq(0, 160, 10), name ="") + theme(legend.position="none")
p2<-ggplot(data3, aes(x=cluster_id, y=coverage, col=comparision_type_species)) +geom_jitter(alpha=0.2) +
facet_wrap(unique_taxa_names ~., scales = 'free_x', nrow=1, shrink=TRUE, dir='h') + scale_y_continuous(name="") +
scale_x_continuous(breaks = seq(0, 7, 1), name ="Cluster ID") + theme(legend.position="none")
p4<-ggarrange(p1, p2,
ncol = 1, nrow = 2, heights = c(2, 1, 1))
plot(p4)
dev.off()
library('ggplot2')
library(ggplot2)
library(dplyr)
library(tidyr)
library(ggpubr)
library(ggplot2)
library('ggExtra')
#Generate Fig 12. Genome coverage pyANI plots
data <- read.csv("../../data/pyani_analysis/pyani_coevarge_identity_df.csv")
data2 <- data[!data$unique_taxa_names %in% c('6', '5','4', '15', '14', '8','7'), ]
data3 <- data[!data$unique_taxa_names %in% c('1', '2', '3'), ]
pdf(file='Fig_12.pdf', width=30, height=15)
p1<-ggplot(data2, aes(x=cluster_id, y=coverage, col=comparision_type_species)) +geom_jitter(alpha=0.2)  + facet_wrap(unique_taxa_names ~., scales = 'free_x', nrow=1, shrink=TRUE, dir='h') + scale_y_continuous(name="Genome Coverage (%)") +
scale_x_continuous(breaks = seq(0, 160, 10), name ="") + theme(legend.position="none")
p2<-ggplot(data3, aes(x=cluster_id, y=coverage, col=comparision_type_species)) +geom_jitter(alpha=0.2) +
facet_wrap(unique_taxa_names ~., scales = 'free_x', nrow=2, shrink=TRUE, dir='h') + scale_y_continuous(name="") +
scale_x_continuous(breaks = seq(0, 7, 1), name ="Cluster ID") + theme(legend.position="none")
p4<-ggarrange(p1, p2,
ncol = 1, nrow = 2, heights = c(2, 1, 1))
plot(p4)
dev.off()
library('ggplot2')
library(ggplot2)
library(dplyr)
library(tidyr)
library(ggpubr)
library(ggplot2)
library('ggExtra')
#Generate Fig 12. Genome coverage pyANI plots
data <- read.csv("../../data/pyani_analysis/pyani_coevarge_identity_df.csv")
data2 <- data[!data$unique_taxa_names %in% c('6', '5','4', '15', '14', '8','7'), ]
data3 <- data[!data$unique_taxa_names %in% c('1', '2', '3'), ]
pdf(file='Fig_12.pdf', width=30, height=15)
p1<-ggplot(data2, aes(x=cluster_id, y=coverage, col=comparision_type_species)) +geom_jitter(alpha=0.2)  + facet_wrap(unique_taxa_names ~., scales = 'free_x', nrow=1, shrink=TRUE, dir='h') + scale_y_continuous(name="Genome Coverage (%)") +
scale_x_continuous(breaks = seq(0, 50, 5), name ="") + theme(legend.position="none")
p2<-ggplot(data3, aes(x=cluster_id, y=coverage, col=comparision_type_species)) +geom_jitter(alpha=0.2) +
facet_wrap(unique_taxa_names ~., scales = 'free_x', nrow=2, shrink=TRUE, dir='h') + scale_y_continuous(name="") +
scale_x_continuous(breaks = seq(0, 7, 1), name ="Cluster ID") + theme(legend.position="none")
p4<-ggarrange(p1, p2,
ncol = 1, nrow = 2, heights = c(2, 1, 1))
plot(p4)
dev.off()
library('ggplot2')
library(ggplot2)
library(dplyr)
library(tidyr)
library(ggpubr)
library(ggplot2)
library('ggExtra')
#Generate Fig 12. Genome coverage pyANI plots
data <- read.csv("../../data/pyani_analysis/pyani_coevarge_identity_df.csv")
data2 <- data[!data$unique_taxa_names %in% c('6', '5','4', '15', '14', '8','7'), ]
data3 <- data[!data$unique_taxa_names %in% c('1', '2', '3'), ]
pdf(file='Fig_12.pdf', width=30, height=15)
p1<-ggplot(data2, aes(x=cluster_id, y=coverage, col=comparision_type_species)) +geom_jitter(alpha=0.2)  + facet_wrap(unique_taxa_names ~., scales = 'free_x', nrow=1, shrink=TRUE, dir='h') + scale_y_continuous(name="Genome Coverage (%)") +
scale_x_continuous(breaks = seq(0, 50, 5), name ="") + theme(legend.position="none")
p2<-ggplot(data3, aes(x=cluster_id, y=coverage, col=comparision_type_species)) +geom_jitter(alpha=0.2) +
facet_wrap(unique_taxa_names ~., scales = 'free_x', nrow=2, shrink=TRUE, dir='h') + scale_y_continuous(name="") +
scale_x_continuous(breaks = seq(0, 7, 1), name ="Cluster ID") + theme(legend.position="none")
p4<-ggarrange(p1, p2,
ncol = 1, nrow = 2, heights = c(1, 1, 1))
plot(p4)
dev.off()
library('ggplot2')
library(ggplot2)
library(dplyr)
library(tidyr)
library(ggpubr)
library(ggplot2)
library('ggExtra')
#Generate Fig 12. Genome coverage pyANI plots
data <- read.csv("../../data/pyani_analysis/pyani_coevarge_identity_df.csv")
data2 <- data[!data$unique_taxa_names %in% c('6', '5','4', '15', '14', '8','7', '3'), ]
data3 <- data[!data$unique_taxa_names %in% c('1', '2'), ]
pdf(file='Fig_12.pdf', width=30, height=15)
p1<-ggplot(data2, aes(x=cluster_id, y=coverage, col=comparision_type_species)) +geom_jitter(alpha=0.2)  + facet_wrap(unique_taxa_names ~., scales = 'free_x', nrow=1, shrink=TRUE, dir='h') + scale_y_continuous(name="Genome Coverage (%)") +
scale_x_continuous(breaks = seq(0, 50, 5), name ="") + theme(legend.position="none")
p2<-ggplot(data3, aes(x=cluster_id, y=coverage, col=comparision_type_species)) +geom_jitter(alpha=0.2) +
facet_wrap(unique_taxa_names ~., scales = 'free_x', nrow=2, shrink=TRUE, dir='h') + scale_y_continuous(name="") +
scale_x_continuous(breaks = seq(0, 7, 1), name ="Cluster ID") + theme(legend.position="none")
p4<-ggarrange(p1, p2,
ncol = 1, nrow = 2, heights = c(1, 1, 1))
plot(p4)
dev.off()
library('ggplot2')
library(ggplot2)
library(dplyr)
library(tidyr)
library(ggpubr)
library(ggplot2)
library('ggExtra')
#Generate Fig 12. Genome coverage pyANI plots
data <- read.csv("../../data/pyani_analysis/pyani_coevarge_identity_df.csv")
data2 <- data[!data$unique_taxa_names %in% c('6', '5','4', '15', '14', '8','7', '3'), ]
data3 <- data[!data$unique_taxa_names %in% c('1', '2'), ]
pdf(file='Fig_12.pdf', width=30, height=15)
p1<-ggplot(data2, aes(x=cluster_id, y=coverage, col=comparision_type_species)) +geom_jitter(alpha=0.2)  + facet_wrap(unique_taxa_names ~., scales = 'free_x', nrow=1, shrink=TRUE, dir='h') + scale_y_continuous(name="Genome Coverage (%)") +
scale_x_continuous(breaks = seq(0, 50, 5), name ="") + theme(legend.position="none")
p2<-ggplot(data3, aes(x=cluster_id, y=coverage, col=comparision_type_species)) +geom_jitter(alpha=0.2) +
facet_wrap(unique_taxa_names ~., scales = 'free_x', nrow=2, shrink=TRUE, dir='h') + scale_y_continuous(name="") +
scale_x_continuous(breaks = seq(0, 10, 1), name ="Cluster ID") + theme(legend.position="none")
p4<-ggarrange(p1, p2,
ncol = 1, nrow = 2, heights = c(1, 1, 1))
plot(p4)
dev.off()
library('ggplot2')
library(ggplot2)
library(dplyr)
library(tidyr)
library(ggpubr)
library(ggplot2)
library('ggExtra')
#Generate Fig 12. Genome coverage pyANI plots
data <- read.csv("../../data/pyani_analysis/pyani_coevarge_identity_df.csv")
data2 <- data[!data$unique_taxa_names %in% c('6', '5','4', '15', '14', '8','7', '3', '9'), ]
data3 <- data[!data$unique_taxa_names %in% c('1', '2'), ]
pdf(file='Fig_12.pdf', width=30, height=15)
p1<-ggplot(data2, aes(x=cluster_id, y=coverage, col=comparision_type_species)) +geom_jitter(alpha=0.2)  + facet_wrap(unique_taxa_names ~., scales = 'free_x', nrow=1, shrink=TRUE, dir='h') + scale_y_continuous(name="Genome Coverage (%)") +
scale_x_continuous(breaks = seq(0, 50, 5), name ="") + theme(legend.position="none")
p2<-ggplot(data3, aes(x=cluster_id, y=coverage, col=comparision_type_species)) +geom_jitter(alpha=0.2) +
facet_wrap(unique_taxa_names ~., scales = 'free_x', nrow=2, shrink=TRUE, dir='h') + scale_y_continuous(name="") +
scale_x_continuous(breaks = seq(0, 10, 1), name ="Cluster ID") + theme(legend.position="none")
p4<-ggarrange(p1, p2,
ncol = 1, nrow = 2, heights = c(1, 1, 1))
plot(p4)
dev.off()
